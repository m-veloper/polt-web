// 상태
export const state = {
  page: 0,
  questions: [
    {
      q: "호그와트에 입학하는 당신! 어떤 기숙사로 가고 싶나요?",
      a: [
        {
          text: "차갑지만 품위있게, 조용하지만 엄격하게 슬리데린!",
          value: "i"
        },
        {
          text: "뜨겁고도 강렬하게, 인생을 즐길 기회는 딱 한 번뿐 그리핀도르!",
          value: "e"
        }
      ]
    },
    {
      q:
        "비밀의 방 피해자가 나오고 있어요! 어떤 방식으로 비밀의 방을 추적할까요?",
      a: [
        {
          text: "피해자들의 이동경로를 파악해보자",
          value: "s"
        },
        {
          text: "비밀의 방에 빠삭한 유령이 있어. 그 유령에게 가보자.",
          value: "n"
        }
      ]
    },
    {
      q:
        "벅빅이 말포이를 다치게 해서 처분형을 당하게 됐습니다. 이 소식을 들은 당신의 생각은?",
      a: [
        {
          text: "벅빅을 왜 죽여 ㅠㅠ",
          value: "f"
        },
        {
          text: "하필 피해자가 말포이냐.",
          value: "t"
        }
      ]
    },
    {
      q:
        "맨드레이크로 약을 만드는 수업을 듣고 있습니다. 이 수업에서 주로 드는 생각은?",
      a: [
        {
          text:
            "맨드레이크로 약을 만들 때 비율을 잘못 계산하면 효과가 전혀 없구나. 기억해놔야지",
          value: "s"
        },
        {
          text:
            "흠, 맨드레이크가 이런 효능을 지닌다면 몸을 나른하게 하는 테라피도 가능할 수 있지 않을까?",
          value: "n"
        }
      ]
    },
    {
      q:
        "론이 프레드에게 장난을 치다 화가난 프레드는 마법으로 론을 대머리로 만들고 떠났습니다. 옆에 있던 당신이 론에게 해줄 말은?",
      a: [
        {
          text:
            "헐, 야 어떻게 해. 괜찮아? 아무리 그래도 이건 좀 심하지. 프레드가 선 넘었다.",
          value: "f"
        },
        {
          text:
            "걱정마. 대머리로 만드는 마법이 있다면 반대로 머리카락 나게하는 마법이 있을 거야. 헤르미온느한테 가보자.",
          value: "t"
        }
      ]
    },
    {
      q:
        "길을 걷는 도중 죽음을 먹는 자가 등장했습니다. 어떻게 도망쳐야 할까요?",
      a: [
        {
          text: "견제 마법을 날리면서 퇴로를 확보해야겠어!",
          value: "j"
        },
        {
          text: "강한 마법을 사용해야 틈이 생긴다! 스투페파이!",
          value: "p"
        }
      ]
    },
    {
      q:
        "30분 거리에 호크룩스가 있는 장소를 발견했습니다. 1시간 안에 파괴해야 하는 상황! 당신은 어떻게 행동하시겠습니까?",
      a: [
        {
          text:
            "잠깐만! 혹시라도 거기에 호크룩스가 없다면? 최악의 경우를 위한 대비책은 있어야지!",
          value: "j"
        },
        {
          text:
            "거기에 호크룩스 지키고 있는 자들이 있으면 전투하느라 시간을 또 낭비할 거야. 지금 당장 출발해야 해!",
          value: "p"
        }
      ]
    },
    {
      q:
        "곧 호그와트 전투가 곧 시작됩니다. 당신은 어떻게 마음을 추스리고 있을까요?",
      a: [
        {
          text: "힘든 상황일수록 전우들과 같이 힘내야지! 서로 응원해주자.",
          value: "e"
        },
        {
          text: "이럴 때일수록 침착해야 돼. 들뜨지 말고 차분하게 있자.",
          value: "i"
        }
      ]
    },
    {
      q:
        "죽음을 먹는 자들이 쳐들어 왔습니다. 그러나 생각보다 적은 숫자입니다. 이 때 드는 생각은?",
      a: [
        {
          text: "생각보다 적네. 빠르게 정리하고 다른 쪽 지원 간다!",
          value: "s"
        },
        {
          text: "저들의 작전은 뭐지? 왜 이 것밖에 안 온 거지? 다른 수가 있나?",
          value: "n"
        }
      ]
    },
    {
      q: "상대가 생각보다 강합니다. 당신은 상대를 어떻게 공략할까요?",
      a: [
        {
          text:
            "연습하고 경험한 것을 믿는다. 상대 약점을 분석하며 내가 가장 잘할 수 있는 것으로 공격!",
          value: "j"
        },
        {
          text:
            "평범한 방법으론 이길 수 없다. 모험을 해서라도 어떻게든 흐름을 내 쪽으로 가져와야겠어.",
          value: "p"
        }
      ]
    },
    {
      q:
        "드디어 해리가 볼드모트를 죽이고 전쟁이 끝났습니다. 당신이 가장 먼저 할 일은?",
      a: [
        {
          text: "다른 사람들 손을 붙잡으면서 만세를 외친다.",
          value: "e"
        },
        {
          text: "털썩 주저 앉아서 호흡을 고르며 휴식을 취한다.",
          value: "i"
        }
      ]
    },
    {
      q: "시대의 영웅이 된 당신이 가장 인정받고 싶은 것은?",
      a: [
        {
          text: "이 전쟁을 승리로 이끌기 위해 투자한 노력",
          value: "f"
        },
        {
          text: "이 전쟁을 승리로 이끈 주역 중의 한 명",
          value: "t"
        }
      ]
    }
  ],
  result: {
    e: 0,
    i: 0,
    s: 0,
    n: 0,
    t: 0,
    f: 0,
    p: 0,
    j: 0
  }
};

// 사용하고자 하는 커밋들이 여기에 들어감. state 를 변경한다
export const mutations = {
  // 사용자가 질문에 응답했을 때, 저장되도록 반영한다.
  SET_USER_TYPE(state, type) {
    // 사용자의 응답한 value의 값이 type이 된다.
    state.result[type] += 1;
    state.page += 1;
  },

  // 페이지만 변경하는 Mutation
  SET_PAGE(state, page) {
    state.page = page;
  },

  // 모든 테스트가 끝나고 최초 페이지로 넘어올 때
  // 사용자의 페이지가 새로 고침됐을 때도 RESET 돼야 함

  PAGE_RESET(state) {
    state.page = 0;
    state.result = {
      e: 0,
      i: 0,
      s: 0,
      n: 0,
      t: 0,
      f: 0,
      p: 0,
      j: 0
    };
  }
};

// 액션
export const actions = {
  clickButton({ commit }, type) {
    commit("SET_USER_TYPE", type);
  },
  clickResetButton({ commit }) {
    commit("PAGE_RESET");
  }
};
